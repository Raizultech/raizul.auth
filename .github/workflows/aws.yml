name: CD - Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Construye, sube la imagen y la despliega a Stage
  build-and-deploy-stage:
    name: Build, Push & Deploy to Stage
    runs-on: ubuntu-latest
    environment:
      name: dev
    # CAMBIO: Ahora el output es solo la etiqueta (tag) de la imagen.
    outputs:
      image_tag: ${{ steps.build-image.outputs.image_tag }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        FULL_IMAGE_NAME="$ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:$IMAGE_TAG"
        
        docker build -t $FULL_IMAGE_NAME .
        docker tag $FULL_IMAGE_NAME $ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:latest
        
        docker push $FULL_IMAGE_NAME
        docker push $ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:latest
        
        # Output para el paso siguiente (dentro de este mismo job)
        echo "full_image_name=$FULL_IMAGE_NAME" >> $GITHUB_OUTPUT
        # CAMBIO: Output para el siguiente job (deploy-prod)
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update App Runner (Stage) with new image
      env:
        # Usa el nombre completo de la imagen generado en el paso anterior
        IMAGE_IDENTIFIER: ${{ steps.build-image.outputs.full_image_name }}
      run: |
        aws apprunner update-service \
          --service-arn ${{ secrets.APP_RUNNER_SERVICE_ARN_STG }} \
          --source-configuration '{
            "ImageRepository": {
              "ImageIdentifier": "'"$IMAGE_IDENTIFIER"'",
              "ImageRepositoryType": "ECR"
            }
          }'

  # Job 2: Despliega a Producci√≥n usando solo el tag
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-deploy-stage] # Depende del job anterior
    environment:
      name: production 

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    # CAMBIO: Se necesita el login a ECR para obtener la URL del registro
    - name: Login to Amazon ECR
      id: login-ecr-prod
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update App Runner (Production) with new image
      # CAMBIO: Se reconstruye el nombre completo de la imagen aqu√≠
      env:
        IMAGE_IDENTIFIER: ${{ steps.login-ecr-prod.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ needs.build-and-deploy-stage.outputs.image_tag }}
      run: |
        echo "Aprobaci√≥n recibida. Desplegando la imagen: $IMAGE_IDENTIFIER"

        aws apprunner update-service \
          --service-arn ${{ secrets.APP_RUNNER_SERVICE_ARN_PRD }} \
          --source-configuration '{
            "ImageRepository": {
              "ImageIdentifier": "'"$IMAGE_IDENTIFIER"'",
              "ImageRepositoryType": "ECR"
            }
          }'
          
  # Job 3: Notificaci√≥n final (sin cambios)
  notify-final:
    name: Final Deploy Results
    runs-on: ubuntu-latest
    needs: [build-and-deploy-stage, deploy-prod]
    if: always()
    steps:
    - name: Notification
      run: |
        if [[ "${{ needs.build-and-deploy-stage.result }}" == "success" && "${{ needs.deploy-prod.result }}" == "success" ]]; then
          echo "üéâ Despliegue completado con √©xito en Stage y Producci√≥n!"
        elif [[ "${{ needs.build-and-deploy-stage.result }}" != "success" ]]; then
          echo "‚ùå Fall√≥ la construcci√≥n o el despliegue a Stage."
          exit 1
        else
          echo "‚ùå Fall√≥ el despliegue a Producci√≥n."
          exit 1
        fi
